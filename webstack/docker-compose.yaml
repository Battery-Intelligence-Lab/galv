version: "2"
x-redash-service: &redash-service
  image: redash/redash:8.0.2.b37747
  depends_on:
    - postgres
    - redis
  env_file: ./.env
  restart: always
services:
  server:
    <<: *redash-service
    command: server
    ports:
      - "5000:5000"
    environment:
      REDASH_WEB_WORKERS: 4
  scheduler:
    <<: *redash-service
    command: scheduler
    environment:
      QUEUES: "celery"
      WORKERS_COUNT: 1
  scheduled_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
  adhoc_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "queries"
      WORKERS_COUNT: 2
  redis:
    image: redis:5.0-alpine
    restart: always
  postgres:
    image: postgres:9.6-alpine
    env_file: ./.env
    ports:
      - "5432:5432"
    volumes:
      - "${PG_DATA_PATH}/redash:/var/lib/postgresql/data"
    restart: always
  nginx:
    image: redash/nginx:latest
    ports:
      - "80:80"
    depends_on:
      - server
    links:
      - server:redash
    restart: always
  galvanalyser_postgres:
    image: "postgres"
    stop_signal: SIGINT                 # Fast Shutdown mode
    ports:
      - "5433:5433"
    command: -p 5433
    volumes:
      - "${PG_DATA_PATH}/galvanalyser:/var/lib/postgresql/data"
    env_file:
      - ./.env
    restart: unless-stopped
  galvanalyser_app:
    build:
      dockerfile: ./webstack/dashapp/Dockerfile
      context: ../
    depends_on:
      - galvanalyser_postgres
    volumes:
     - ../galvanalyser/harvester:/usr/src/app/galvanalyser/harvester
     - ../galvanalyser/database:/usr/src/app/galvanalyser/database
     - ../galvanalyser/webapp:/usr/src/app/galvanalyser/webapp
     - "${TEST_DATA_PATH}:/usr/data"
    restart: unless-stopped
    working_dir: /usr/src/app/galvanalyser/webapp
    command: python manage.py run -h 0.0.0.0
    restart: always
    env_file:
     - ./.env
