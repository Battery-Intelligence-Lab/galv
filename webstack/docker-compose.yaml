version: "2"
x-redash-service: &redash-service
  image: redash/redash:9.0.0-beta.b42121
  depends_on:
    - postgres
    - redis
  env_file: ./.env
  restart: always
services:
  server:
    <<: *redash-service
    command: server
    ports:
      - "5000:5000"
    environment:
      REDASH_WEB_WORKERS: 4
  worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "periodic emails default"
      WORKERS_COUNT: 1
  scheduler:
    <<: *redash-service
    command: scheduler
    environment:
      QUEUES: "celery"
      WORKERS_COUNT: 1
  scheduled_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
  adhoc_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "queries"
      WORKERS_COUNT: 2
  redis:
    image: redis:5.0-alpine
    restart: always
  postgres:
    image: postgres:9.6-alpine
    env_file: ./.env
    ports:
      - "5432:5432"
    volumes:
      - "${REDASH_DATA_PATH}:/var/lib/postgresql/data"
    restart: always
  nginx:
    image: redash/nginx:latest
    ports:
      - "80:80"
    depends_on:
      - server
    links:
      - server:redash
    restart: always
  galvanalyser_rabbitmq:
    image: "rabbitmq"
    ports:
      - "5672:5672"
    env_file:
      - ./.env
    restart: unless-stopped
  galvanalyser_redis:
    image: redis:5.0-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
     - "6379:6379"
    volumes:
     - "${REDASH_DATA_PATH}:/var/lib/redis"
  galvanalyser_postgres:
    image: "postgres"
    stop_signal: SIGINT                 # Fast Shutdown mode
    ports:
      - "5433:5433"
    command: -p 5433
    volumes:
      - "${GALVANALYSER_DATA_PATH}:/var/lib/postgresql/data"
    env_file:
      - ./.env
    restart: unless-stopped
  
  galvanalyser_app:
    image: galvanalyser_app
    build:
      dockerfile: ./webstack/flaskapp/Dockerfile
      context: ../
    depends_on:
      - galvanalyser_redis
      - galvanalyser_rabbitmq
      - galvanalyser_postgres
      - postgres
    ports:
      - "5001:5000"
    volumes:
     - ../galvanalyser/harvester:/usr/src/app/galvanalyser/harvester
     - ../galvanalyser/database:/usr/src/app/galvanalyser/database
     - ../galvanalyser/webapp:/usr/src/app/galvanalyser/webapp
     - "${GALVANALYSER_HARVESTER_TEST_PATH}:/usr/test_data"
     - "${GALVANALYSER_HARVESTER_BASE_PATH}:/usr/data"
    restart: unless-stopped
    working_dir: /usr/src/app/galvanalyser/webapp
    command: python manage.py run -h 0.0.0.0
    restart: unless-stopped
    env_file:
     - ./.env
  galvanalyser_worker:
    image: galvanalyser_app
    command: ./celery.sh 
    depends_on:
      - galvanalyser_app
    volumes:
     - ../galvanalyser/harvester:/usr/src/app/galvanalyser/harvester
     - ../galvanalyser/database:/usr/src/app/galvanalyser/database
     - ../galvanalyser/webapp:/usr/src/app/galvanalyser/webapp
     - "${GALVANALYSER_HARVESTER_BASE_PATH}:/usr/data"
     - "${CELERY_WORKER_LOG_DIR}:/var/log/celery"

    working_dir: /usr/src/app/galvanalyser/webapp
    restart: unless-stopped
    env_file:
     - ./.worker.env
  galvanalyser_frontend:
    build:
      dockerfile: ./webstack/frontend/Dockerfile
      context: ../
    depends_on:
      - galvanalyser_postgres
      - galvanalyser_app
    ports:
      - "3000:3000"
    volumes:
     - ../galvanalyser/frontend:/usr/src/app/galvanalyser/frontend
    restart: unless-stopped
    working_dir: /usr/src/app/galvanalyser/frontend
    command: yarn start 
    restart: unless-stopped
    env_file:
     - ./.env
