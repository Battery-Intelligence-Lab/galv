# change FLASK_ENV to "production" once galvanalyser is installed and running correctly
FLASK_ENV=development
FLASK_DEBUG=True

# this password is used for both the galvanalyser and redash databases
POSTGRES_PASSWORD=galvanalyser

# this is the directory that the galvanalyser postgres database will be located
GALVANALYSER_DATA_PATH=./.run/data/galvanalyser

# this is the directory that will be scanned for battery tester output files when
# running the harvester test suite
GALVANALYSER_HARVESTER_TEST_PATH=./.run/test_datafiles

# this is the base directory for the harvesters run by the server (note harvesters can
# also be setup independently from the server if required, see documentation for
# details). New directories added for scanning will be relative to this base directory
GALVANALYSER_HARVESTER_BASE_PATH=./.run/datafiles

# username and password for default harvester account
HARVESTER_USERNAME=harv
HARVESTER_PASSWORD=harv

# secret used to encrypt JWT for galvanalyser web app and api
GALVANALYSER_SECRET_KEY=secret_key

# a non empty value ensures that the python output is sent straight to terminal (e.g. your container log) without being first buffered and that you can see the output of your application (e.g. django logs) in real time
PYTHONUNBUFFERED=1

# setup for rabbitmq server, which will be setup with a username =
# RABBITMQ_DEFAULT_USER with a password of RABBITMQ_DEFAULT_PASS
# Make sure that the default user and password match the 
# RABBITMQ_URL paramter, which is in the format:
#     pyamqp://RABBITMQ_DEFAULT_USER:RABBITMQ_DEFAULT_PASS@rabbitmq:5672
RABBITMQ_DEFAULT_USER=test-user
RABBITMQ_DEFAULT_PASS=test-user
RABBITMQ_URL=pyamqp://test-user:test-user@rabbitmq:5672

# where to put logs for the celery task manager
CELERY_LOG_DIR=./.run/data/celery

# location for the redis database files
REDIS_DATA_PATH=./.run/data/redis
REDIS_PASSWORD=redis
REDIS_URL=redis://:redis@redis:6379

# Required to get react running:
NODE_OPTIONS=--openssl-legacy-provider