{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/Battery-Intelligence-Lab/galv/blob/main/backend/backend_django/galv/fixtures/cycler_data_schema.json",
  "$comment": "This schema defines the minimum requirements for data in the Galv system. It uses Linked Data definitions from the EMMO/BattINFO projects where possible.",
  "type": "object",
  "description": "Experiment metadata",
  "additionalProperties": true,
  "properties": {
    "Identifier": {
      "type": "string",
      "description": "Identifier for the experiment"
    },
    "Title": {
      "type": "string",
      "description": "Title of the experiment"
    },
    "Description": {
      "type": "string",
      "description": "Description of the experiment"
    },
    "Authors": {
      "type": "array",
      "description": "List of authors of the experiment",
      "items": {
        "type": "string"
      }
    },
    "Protocol": {
      "oneOf": [
        {
          "$ref": "#/$defs/ArbitraryFile"
        },
        {
          "type": "object",
          "additionalProperties": true,
          "description": "JSON representation of the protocol"
        }
      ]
    },
    "Cycler Tests": {
      "type": "array",
      "description": "List of cycler data files associated with the experiment",
      "items": {
        "$ref": "#/$defs/CyclerTest"
      },
      "minimumItems": 1
    }
  },
  "required": [
    "Identifier"
  ],
  "$defs": {
    "GalvUUID": {
      "type": "string",
      "description": "Universally unique identifier for the experiment, assigned by Galv [type 5, galv.oxrse.uk namespace]",
      "format": "uuid",
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-5[0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "readOnly": true
    },
    "ArbitraryFile": {
      "type": "object",
      "properties": {
        "Path": {
          "type": "string",
          "description": "URL to the file",
          "format": "uri"
        },
        "Format": {
          "type": "string",
          "description": "Type of file, e.g. csv"
        }
      },
      "required": [
        "Path",
        "Format"
      ]
    },
    "UnitSecond": {
      "type": "string",
      "description": "Seconds",
      "const": "s",
      "default": "s",
      "readOnly": true
    },
    "UnitVolt": {
      "type": "string",
      "description": "Volts",
      "const": "V",
      "default": "V",
      "readOnly":  true
    },
    "UnitAmpere": {
      "type": "string",
      "description": "Amps",
      "const": "A",
      "default": "A",
      "readOnly":  true
    },
    "Electrode": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "Composition": {
          "type": "string",
          "description": "Composition of the electrode, e.g. NCM811"
        },
        "Thickness": {
          "type": "number",
          "description": "Thickness of the electrode in microns",
          "exclusiveMinimum": 0
        },
        "Coated Area": {
          "type": "number",
          "description": "Coated area of the electrode in cm^2",
          "exclusiveMinimum": 0
        }
      }
    },
    "Cell": {
      "type": "object",
      "description": "Electrochemical cell used in the experiment",
      "additionalProperties": true,
      "properties": {
        "uuid": {
          "$ref": "#/$defs/GalvUUID"
        },
        "Identifier": {
          "type": "string",
          "description": "Identifier for the cell"
        },
        "Datasheet": {
          "oneOf": [
            {
              "type": "string",
              "description": "URL to the cell datasheet",
              "format": "uri"
            },
            {
              "type": "object",
              "additionalProperties": true,
              "description": "JSON representation of the cell datasheet"
            }
          ],
          "description": "URL to the cell datasheet",
          "format": "uri"
        },
        "Manufacturer": {
          "type": "string",
          "description": "Name of the cell manufacturer"
        },
        "Model": {
          "type": "string",
          "description": "Name of the cell model"
        },
        "Mass": {
          "type": "number",
          "description": "Mass of the cell in grams",
          "exclusiveMinimum": 0
        },
        "Form Factor": {
          "type": "string",
          "description": "Form factor of the cell, e.g. 'pouch'"
        },
        "Rated Capacity": "",
        "Negative Electrode": {
          "$ref": "#/$defs/Electrode"
        },
        "Positive Electrode": {
          "$ref": "#/$defs/Electrode"
        }
      }
    },
    "Equipment": {
      "type": "object",
      "definition": "Equipment used to make observations on the Cell, producing the readings in the Columns",
      "properties": {
        "Description": {
          "type": "string",
          "description": "Description of the equipment"
        },
        "Calibration Date": {
          "type": "string",
          "description": "Date of the equipment calibration",
          "format": "date"
        },
        "Manufacturer": {
          "type": "string",
          "description": "Name of the equipment manufacturer"
        },
        "Model Number": {
          "type": "string",
          "description": "Model number of the equipment"
        },
        "Identifier": {
          "type": "string",
          "description": "Serial number or other unique identifier for the equipment"
        }
      },
      "additionalProperties": true
    },
    "Column": {
      "type": "object",
      "additionalProperties": false,
      "unevaluatedProperties": true,
      "description": "A variable in the cycler data file represented as a column of values",
      "properties": {
        "Description": {
          "type": "string",
          "description": "Description of the column"
        },
        "Units": {
          "type": "string",
          "description": "Units of the column"
        },
        "Data": {
          "type": "array",
          "description": "Array of values in the column",
          "items": {
            "type": "number"
          }
        },
        "Ontology": {
          "type": "string",
          "description": "URI to the ontology term for the column"
        }
      },
      "required": [
        "Units",
        "Data"
      ]
    },
    "Dataframe": {
      "type": "object",
      "description": "Columns of data in the cycler data file",
      "properties": {
        "Elapsed Time": {
          "allOf": [
            {
              "$ref": "#/$defs/Column"
            },
            {
              "type": "object",
              "description": "Time elapsed since the start of the experiment",
              "properties": {
                "Units": {
                  "$ref": "#/$defs/UnitSecond"
                },
                "Data": {
                  "default": []
                }
              }
            }
          ]
        },
        "Voltage": {
          "$ref": "#/$defs/Column",
          "Description": "Voltage of the cell",
          "Units": {
            "$ref": "#/$defs/UnitVolt"
          }
        },
        "Current": {
          "$ref": "#/$defs/Column",
          "Description": "Current of the cell",
          "Units": {
            "$ref": "#/$defs/UnitAmpere"
          }
        }
      },
      "additionalProperties": {
        "$ref": "#/$defs/Column"
      },
      "unevaluatedProperties": false
    },
    "Schedule": {
      "type": "object",
      "description": "Cycler schedule used to generate the data",
      "additionalProperties": true,
      "properties": {
        "Definition": {
          "type": "string",
          "description": "Type of experiment, e.g. Constant-Current Discharge"
        },
        "Description": {
          "type": "string",
          "description": "Description of the experiment"
        },
        "Ambient Temperature": {
          "type": "number",
          "description": "Ambient temperature in Kelvin",
          "exclusiveMinimum": 0
        },
        "ExternalScheduleFile": {
          "$ref": "#/$defs/ArbitraryFile",
          "description": "Attach an external schedule file. This will be assumed to be a more accurate representation of the schedule than the PyBaMMSchedule (if present)."
        },
        "PyBaMMSchedule": {
          "type": "object",
          "additionalProperties": true,
          "description": "PyBaMM representation of the schedule"
        }
      }
    },
    "CyclerTest": {
      "title": "Cycler Test",
      "description": "Measured or simulated data from a battery cycler experiment",
      "type": "object",
      "unevaluatedProperties": false,
      "properties": {
        "uuid": {
          "$ref": "#/$defs/GalvUUID"
        },
        "Cell": {
          "$ref": "#/$defs/Cell"
        },
        "Dataframe": {
          "$ref": "#/$defs/Dataframe"
        },
        "Schedule": {
          "$ref": "#/$defs/Schedule"
        },
        "Equipment": {
          "type": "array",
          "description": "Equipment used to run the Protocol and make observations on the Cell, producing the readings in the Columns",
          "items": {
            "$ref": "#/$defs/Equipment"
          }
        }
      },
      "required": [
        "uuid",
        "Cell",
        "Dataframe",
        "Schedule",
        "Equipment"
      ]
    }
  }
}

