name: Docs
on:
  push:
    branches:
      - master
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  build-erd:
    runs-on: ubuntu-latest
    env:
      POSTGRES_PASSWORD: "galvanalyser"
      DJANGO_SECRET_KEY: "long-and-insecure-key-12345"
    steps:
      - uses: actions/checkout@v2
      - name: Install additional requirements
        run: |
          sudo apt-get install -y graphviz
          echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" > .env.secret
          echo "DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY" >> .env.secret
          echo "django-extensions==3.2.1" >> backend/requirements.txt
          sed -i "s+'rest_framework',+'rest_framework', 'django_extensions',+g" backend/backend_django/config/settings.py

      - name: Create Entity Relationship Diagram
        run: |
          docker-compose -f docker-compose.docs.yml run app python manage.py graph_models --dot --output output.dot galvanalyser
          dot -Tpng backend/output.dot -o docs/ERD.png

      - name: Create API spec
        run: |
          docker-compose -f docker-compose.docs.yml run app python backend_django/manage.py spectacular galvanalyser --file schema.yml
          mv backend/backend_django/schema.yml docs/schema.yml

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - name: Push to docs branch
        run: |
          git worktree add docs
          git config user.name "Deploy from CI"
          git config user.email ""
          cd docs
          # Delete the ref to avoid keeping history.
          git update-ref -d refs/heads/docs
          rm -rf *
          mv ../docs/* .
          git add .
          git commit -m "Deploy $GITHUB_SHA to docs"
          git push --set-upstream origin docs --force
